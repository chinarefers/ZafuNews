apply plugin: 'com.android.application'

android {
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    signingConfigs {
        release {
            keyAlias 'lizhangqu'
            keyPassword 'lizhangqu'
            storeFile file('./key/lizhangqu.jks')
            storePassword 'lizhangqu'
        }
    }
    compileSdkVersion 22
    buildToolsVersion "22.0.1"
    defaultConfig {
        applicationId "cn.edu.zafu.news"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 4
        versionName "2.0"
    }
    buildTypes {
        debug{
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    productFlavors {
        wandoujia {}
        baidu {}
        anzhuo{}
        shoujizhushou {}
        zafu{}
    }
    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }


    //修改生成的apk名字
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def oldFile = output.outputFile
            def newName = '';
            if (variant.buildType.name.equals('release')) {
                def releaseApkName = getProductName() + "-v${defaultConfig.versionName}-" + variant.productFlavors[0].name + '-signed.apk'
                output.outputFile = new File(oldFile.parent, releaseApkName)
            }
            if (variant.buildType.name.equals('beta')) {
                newName = getProductName() + "-v${defaultConfig.versionName}-" + variant.productFlavors[0].name + "-beta"  + ".apk"
                output.outputFile = new File(oldFile.parent, newName)
            }
            if (variant.buildType.name.equals('debug')) {
                newName = getProductName() + "-v${defaultConfig.versionName}-" + variant.productFlavors[0].name + "-debug"  + ".apk"
                output.outputFile = new File(oldFile.parent, newName)
            }
        }
    }
}
//获取产品名
def getProductName() {
    return "zafunews"
}
//获取时间戳
def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:22.2.0'
    compile 'com.android.support:design:22.2.0'
    compile 'com.android.support:recyclerview-v7:22.2.0'
    compile 'com.squareup.okhttp:okhttp:2.5.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'org.jsoup:jsoup:1.8.3'
    compile 'com.j256.ormlite:ormlite-android:4.48'
    compile 'com.umeng.analytics:analytics:latest.integration'
    compile 'com.readystatesoftware.systembartint:systembartint:1.0.3'
    compile project(':corepage')
    compile project(':update')
    compile 'com.lsjwzh:materialloadingprogressbar:0.5.5-RELEASE'
    compile 'com.github.clans:fab:1.5.0'
    compile project(':share')
}
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
